---
variant: fcos
version: 1.3.0
storage:
  files:
    - path: /var/lib/kubelet/init-config.yaml
      overwrite: true
      contents:
        inline: |
            ---
            apiVersion: kubeadm.k8s.io/v1beta2
            kind: InitConfiguration
            bootstrapTokens:
              - token: "${token}"
            certificateKey: "${certificate_key}"
            ---
            apiVersion: kubeadm.k8s.io/v1beta2
            kind: ClusterConfiguration
            controlPlaneEndpoint: "${control_plane_ip}:6443"
    - path: /etc/kubernetes/manifests/kube-vip.yaml
      overwrite: true
      contents:
        inline: |
            apiVersion: v1
            kind: Pod
            metadata:
              creationTimestamp: null
              name: kube-vip
              namespace: kube-system
            spec:
              containers:
              - args:
                - manager
                env:
                - name: vip_arp
                  value: "true"
                - name: vip_interface
                  value: eth0
                - name: port
                  value: "6443"
                - name: vip_cidr
                  value: "32"
                - name: cp_enable
                  value: "true"
                - name: cp_namespace
                  value: kube-system
                - name: svc_enable
                  value: "true"
                - name: vip_leaderelection
                  value: "true"
                - name: vip_leaseduration
                  value: "5"
                - name: vip_renewdeadline
                  value: "3"
                - name: vip_retryperiod
                  value: "1"
                - name: vip_address
                  value: ${control_plane_ip}
                image: plndr/kube-vip:0.3.1
                imagePullPolicy: Always
                name: kube-vip
                resources: {}
                securityContext:
                  capabilities:
                    add:
                    - NET_ADMIN
                    - NET_RAW
                    - SYS_TIME
                volumeMounts:
                - mountPath: /etc/kubernetes/admin.conf
                  name: kubeconfig
              hostNetwork: true
              volumes:
              - hostPath:
                  path: /etc/kubernetes/admin.conf
                name: kubeconfig
            status: {}
systemd:
  units:
    - name: cluster-creation.service
      enabled: true
      contents: |
        [Unit]
        ConditionPathExists=!/etc/kubernetes/kubelet.conf
        After=issuegen-first-boot.service crio.service kubelet.service
        Requires=issuegen-first-boot.service crio.service
        StartLimitInterval=1200s
        StartLimitBurst=5

        [Service]
        EnvironmentFile=/etc/sysconfig/kubelet
        Environment="KUBELET_EXTRA_ARGS="--container-runtime=remote --container-runtime-endpoint=unix:///var/run/crio/crio.sock --runtime-request-timeout=15m --cgroup-driver=systemd -v=2"
        Type=oneshot
        ExecStart=/usr/bin/kubeadm init --config /var/lib/kubelet/init-config.yaml --upload-certs
        ExecStartPost=/usr/bin/sudo -u localanthony mkdir -p /home/localanthony/.kube
        ExecStartPost=/usr/bin/cp /etc/kubernetes/admin.conf /home/localanthony/.kube/config
        ExecStartPost=/usr/bin/chown localanthony:users /home/localanthony/.kube/config
        Restart=on-failure
        RestartSec=120s

        [Install]
        WantedBy=multi-user.target